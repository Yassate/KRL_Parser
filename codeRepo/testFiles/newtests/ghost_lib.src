&ACCESS R
&REL 44
&COMMENT 
&USER PKL_AST

DEF ghost_lib( )

END

GLOBAL DEFFCT BOOL Ghost()
   CONTINUE
   return GhostForced and $IN[I_GhostActive] and not $in[I_GhostNonActive]
endfct

DEFFCT BOOL GhostForced()
	return ghost_forced
ENDFCT

GLOBAL DEFFCT BOOL nearE6Pos(ePOS:IN)
 DECL E6POS ePOS
 DECL E6POS Delta
 DECL BOOL bRet

 bRet = False

 Delta.X = ABS(ePOS.X - $Pos_Act.X)
 Delta.Y = ABS(ePOS.Y - $Pos_Act.Y)
 Delta.Z = ABS(ePOS.Z - $Pos_Act.Z)
 Delta.A = ABS(ePOS.A - $Pos_Act.A)
 Delta.B = ABS(ePOS.B - $Pos_Act.B)
 Delta.C = ABS(ePOS.C - $Pos_Act.C)

 Delta.S = ePOS.S - $Pos_Act.S
 Delta.T = ePOS.T - $Pos_Act.T

 Delta.E1 = ABS(ePOS.E1 - $Pos_Act.E1)
 Delta.E2 = ABS(ePOS.E2 - $Pos_Act.E2)
 Delta.E3 = ABS(ePOS.E3 - $Pos_Act.E3)
 Delta.E4 = ABS(ePOS.E4 - $Pos_Act.E4)
 Delta.E5 = ABS(ePOS.E5 - $Pos_Act.E5)
 Delta.E6 = ABS(ePOS.E6 - $Pos_Act.E6)

 bRet= (Delta.X < MaxPosTol.X) and (Delta.Y < MaxPosTol.Y) and (Delta.Z < MaxPosTol.Z) and (Delta.A < MaxPosTol.A) and (Delta.B < MaxPosTol.B) and (Delta.C < MaxPosTol.C)
 bRet=bRet and (Delta.S == 0) and (Delta.T == 0)
 bRet=bRet and (Delta.E1 < MaxPosTol.E1) and (Delta.E2 < MaxPosTol.E2) and (Delta.E3 < MaxPosTol.E3) and (Delta.E4 < MaxPosTol.E4) and (Delta.E5 < MaxPosTol.E5) and (Delta.E6 < MaxPosTol.E6)
 Return(bRet)
ENDFCT